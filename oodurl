#!/bin/bash
# generate OOD session URL
if [ $# -ne 1 ]; then
    echo "Usage: `basename $0` JobID"
    exit 1
fi
URLPREFIX="https://rivanna-portal.hpc.virginia.edu"
VNC="1.3.0"

function unsupported {
    echo "$1 is not yet supported by this script. Sorry!"
    exit 0
}

JOBID=$1
JOBINFO=$(scontrol show job $1)
if [ $? -ne 0 ]; then
    echo "$JOBID is not an active job"
    exit 1
fi

USERNAME=$(echo "$JOBINFO" | sed -n 's/^\s*UserId=\([a-z0-9]*\)(.*$/\1/p')
DIR=$(echo "$JOBINFO" | awk -F= '/WorkDir/ {print $2}')
echo "$DIR"

# check if job is an OOD session
if [[ ! "$DIR" =~ "/home/$USERNAME/ondemand".* ]]; then
    echo "Not an OOD session"
    exit 1
fi

# check if connection.yml exists
#if [ ! -e $DIR/connection.yml ]; then
    #echo "connection.yml not found. Perhaps connection not yet established."
    #exit 1
#fi

# assign variables host, port, password, websocket
eval "$(sudo -i -u $USERNAME cat $DIR/connection.yml | sed 's/: /=/g')"

[ -z "$host" ] && {
    echo "Error: host not found"
    exit 1
}
[ -z "$port" ] && {
    echo "Error: port not found"
    exit 1
}
[ -z "$password" ] && {
    echo "Error: password not found"
    exit 1
}

APP=$(basename $(realpath $DIR/../..))

case $APP in
jupyter_lab)
    URL="${URLPREFIX}/node/${host}/${port}/lab"
    ;;
rstudio)
    URL="${URLPREFIX}/rnode/${host}/${port}/?"
    ;;
uva_vscode*)
    URL="${URLPREFIX}/rnode/${host}/${port}/?"
    ;;
uva_*)
    [ -z "$websocket" ] && {
        echo "Error: websocket not found"
        exit 1
    }
    URLVNC="${URLPREFIX}/pun/sys/dashboard/noVNC-${VNC}/vnc.html?utf8=%E2%9C%93&autoconnect=true&path=rnode%2F${host}%2F${websocket}%2Fwebsockify&resize=remote&compressionsetting=6&qualitysetting=2&commit=Launch+"
    case $APP in
    uva_matlab)
        URL="${URLVNC}MATLAB"
        ;;
    uva_desktop)
        URL="${URLVNC}Desktop"
        ;;
    uva_blender)
        URL="${URLVNC}Blender"
        ;;
    uva_paraview)
        URL="${URLVNC}ParaView"
        ;;
    uva_qgis)
        URL="${URLVNC}QGIS"
        ;;
    *)
        unsupported $1
        ;;
    esac
    ;;
*)
    unsupported $1
    ;;
esac

echo
echo $URL
echo
echo $password
